pipeline {
    agent any
    
    environment {
        DOCKER_REGISTRY = 'xINDYx'
        SERVICE_NAME = 'blocker-service'
        KUBE_CONFIG = credentials('kubeconfig')
    }
    
    stages {
        stage('Validate') {
            steps {
                sh '''
                    helm lint helm/charts/${SERVICE_NAME}
                '''
            }
        }
        
        stage('Build and Test') {
            steps {
                sh './mvnw clean verify'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_REGISTRY}/${SERVICE_NAME}:${BUILD_NUMBER}")
                    docker.withRegistry('', 'dockerhub') {
                        docker.image("${DOCKER_REGISTRY}/${SERVICE_NAME}:${BUILD_NUMBER}").push()
                    }
                }
            }
        }
        
        stage('Deploy to Test') {
            when {
                branch 'develop'
            }
            steps {
                script {
                    withKubeConfig([credentialsId: 'kubeconfig']) {
                        sh '''
                            helm upgrade --install ${SERVICE_NAME} ./helm/charts/${SERVICE_NAME} \
                                --namespace test \
                                --create-namespace \
                                --values ./helm/charts/${SERVICE_NAME}/values-test.yaml \
                                --set image.tag=${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }
        
        stage('Deploy to Production') {
            when {
                branch 'main'
            }
            steps {
                script {
                    withKubeConfig([credentialsId: 'kubeconfig']) {
                        sh '''
                            helm upgrade --install ${SERVICE_NAME} ./helm/charts/${SERVICE_NAME} \
                                --namespace prod \
                                --create-namespace \
                                --values ./helm/charts/${SERVICE_NAME}/values-prod.yaml \
                                --set image.tag=${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
} 